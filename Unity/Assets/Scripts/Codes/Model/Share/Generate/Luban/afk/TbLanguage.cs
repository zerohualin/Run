//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace Cfg.afk
{
   
public partial class TbLanguage
{
    private readonly List<afk.Language> _dataList;

    private Dictionary<string, afk.Language> _dataMap_Id;
    private Dictionary<string, afk.Language> _dataMap_Key;

    public TbLanguage(ByteBuf _buf)
    {
        _dataList = new List<afk.Language>();
        
        for(int n = _buf.ReadSize() ; n > 0 ; --n)
        {
            afk.Language _v;
            _v = afk.Language.DeserializeLanguage(_buf);
            _dataList.Add(_v);
        }
        _dataMap_Id = new Dictionary<string, afk.Language>();
        _dataMap_Key = new Dictionary<string, afk.Language>();
    foreach(var _v in _dataList)
    {
        _dataMap_Id.Add(_v.Id, _v);
        _dataMap_Key.Add(_v.Key, _v);
    }
        PostInit();
    }


    public List<afk.Language> DataList => _dataList;

    public afk.Language GetById(string key) => _dataMap_Id.TryGetValue(key, out afk.Language __v) ? __v : null;
    public afk.Language GetByKey(string key) => _dataMap_Key.TryGetValue(key, out afk.Language __v) ? __v : null;

    public void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var v in _dataList)
        {
            v.Resolve(_tables);
        }
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var v in _dataList)
        {
            v.TranslateText(translator);
        }
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}