//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace Cfg.afk
{
   
/// <summary>
/// 属性拓展表
/// </summary>
public partial class TbAttrTypeEx
{
    private readonly List<afk.AttrTypeEx> _dataList;

    private Dictionary<int, afk.AttrTypeEx> _dataMap_Id;
    private Dictionary<string, afk.AttrTypeEx> _dataMap_Name;

    public TbAttrTypeEx(ByteBuf _buf)
    {
        _dataList = new List<afk.AttrTypeEx>();
        
        for(int n = _buf.ReadSize() ; n > 0 ; --n)
        {
            afk.AttrTypeEx _v;
            _v = afk.AttrTypeEx.DeserializeAttrTypeEx(_buf);
            _dataList.Add(_v);
        }
        _dataMap_Id = new Dictionary<int, afk.AttrTypeEx>();
        _dataMap_Name = new Dictionary<string, afk.AttrTypeEx>();
    foreach(var _v in _dataList)
    {
        _dataMap_Id.Add(_v.Id, _v);
        _dataMap_Name.Add(_v.Name, _v);
    }
        PostInit();
    }


    public List<afk.AttrTypeEx> DataList => _dataList;

    public afk.AttrTypeEx GetById(int key) => _dataMap_Id.TryGetValue(key, out afk.AttrTypeEx __v) ? __v : null;
    public afk.AttrTypeEx GetByName(string key) => _dataMap_Name.TryGetValue(key, out afk.AttrTypeEx __v) ? __v : null;

    public void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var v in _dataList)
        {
            v.Resolve(_tables);
        }
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var v in _dataList)
        {
            v.TranslateText(translator);
        }
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}