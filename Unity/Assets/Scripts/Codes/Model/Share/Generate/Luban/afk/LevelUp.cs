//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace Cfg.afk
{
public sealed partial class LevelUp :  Bright.Config.BeanBase 
{
    public LevelUp(ByteBuf _buf) 
    {
        Id = _buf.ReadString();
        Name = _buf.ReadString();
        LevelType = (LevelType)_buf.ReadInt();
        Level = _buf.ReadInt();
        FrontLevel = _buf.ReadString();
        CostExp = _buf.ReadInt();
        CostCoin = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);CostItem = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); CostItem.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);CostItemCount = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); CostItemCount.Add(_e0);}}
        Val1 = _buf.ReadFloat();
        Val2 = _buf.ReadFloat();
        Val3 = _buf.ReadFloat();
        Val4 = _buf.ReadFloat();
        Val5 = _buf.ReadFloat();
        PostInit();
    }

    public static LevelUp DeserializeLevelUp(ByteBuf _buf)
    {
        return new afk.LevelUp(_buf);
    }

    public string Id { get; private set; }
    public string Name { get; private set; }
    public LevelType LevelType { get; private set; }
    public int Level { get; private set; }
    public string FrontLevel { get; private set; }
    public int CostExp { get; private set; }
    public int CostCoin { get; private set; }
    public System.Collections.Generic.List<string> CostItem { get; private set; }
    public System.Collections.Generic.List<int> CostItemCount { get; private set; }
    public float Val1 { get; private set; }
    public float Val2 { get; private set; }
    public float Val3 { get; private set; }
    public float Val4 { get; private set; }
    public float Val5 { get; private set; }

    public const int __ID__ = -899895273;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "LevelType:" + LevelType + ","
        + "Level:" + Level + ","
        + "FrontLevel:" + FrontLevel + ","
        + "CostExp:" + CostExp + ","
        + "CostCoin:" + CostCoin + ","
        + "CostItem:" + Bright.Common.StringUtil.CollectionToString(CostItem) + ","
        + "CostItemCount:" + Bright.Common.StringUtil.CollectionToString(CostItemCount) + ","
        + "Val1:" + Val1 + ","
        + "Val2:" + Val2 + ","
        + "Val3:" + Val3 + ","
        + "Val4:" + Val4 + ","
        + "Val5:" + Val5 + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}