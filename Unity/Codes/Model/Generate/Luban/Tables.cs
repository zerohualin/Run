//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;


namespace Cfg
{
   
public partial class Tables
{
    /// <summary>
    /// 道具表
    /// </summary>
    public item.TbItem TbItem {get; }
    /// <summary>
    /// 蓝图表
    /// </summary>
    public zerg.TbBluePrint TbBluePrint {get; }
    /// <summary>
    /// 建筑表
    /// </summary>
    public zerg.TbBuilding TbBuilding {get; }
    public Global.TbGlobal TbGlobal {get; }
    public Demo.TbAIMetas TbAIMetas {get; }
    public Demo.TbUnitMeta TbUnitMeta {get; }
    public Fgui.TbFguiConfig TbFguiConfig {get; }

    public Tables(System.Func<string, ByteBuf> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        TbItem = new item.TbItem(loader("item_tbitem")); 
        tables.Add("item.TbItem", TbItem);
        TbBluePrint = new zerg.TbBluePrint(loader("zerg_tbblueprint")); 
        tables.Add("zerg.TbBluePrint", TbBluePrint);
        TbBuilding = new zerg.TbBuilding(loader("zerg_tbbuilding")); 
        tables.Add("zerg.TbBuilding", TbBuilding);
        TbGlobal = new Global.TbGlobal(loader("global_tbglobal")); 
        tables.Add("Global.TbGlobal", TbGlobal);
        TbAIMetas = new Demo.TbAIMetas(loader("demo_tbaimetas")); 
        tables.Add("Demo.TbAIMetas", TbAIMetas);
        TbUnitMeta = new Demo.TbUnitMeta(loader("demo_tbunitmeta")); 
        tables.Add("Demo.TbUnitMeta", TbUnitMeta);
        TbFguiConfig = new Fgui.TbFguiConfig(loader("fgui_tbfguiconfig")); 
        tables.Add("Fgui.TbFguiConfig", TbFguiConfig);

        PostInit();
        TbItem.Resolve(tables); 
        TbBluePrint.Resolve(tables); 
        TbBuilding.Resolve(tables); 
        TbGlobal.Resolve(tables); 
        TbAIMetas.Resolve(tables); 
        TbUnitMeta.Resolve(tables); 
        TbFguiConfig.Resolve(tables); 
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        TbItem.TranslateText(translator); 
        TbBluePrint.TranslateText(translator); 
        TbBuilding.TranslateText(translator); 
        TbGlobal.TranslateText(translator); 
        TbAIMetas.TranslateText(translator); 
        TbUnitMeta.TranslateText(translator); 
        TbFguiConfig.TranslateText(translator); 
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}